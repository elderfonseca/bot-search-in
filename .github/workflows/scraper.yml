name: Run LinkedIn Scraper

on:
  schedule:
    - cron: '0 13 * * *' # Running at 10:00 AM GMT-3
    - cron: '0 22 * * *' # Running at 07:00 PM GMT-3
  workflow_dispatch: # Allow manual trigger

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Adicionar timeout para evitar jobs infinitos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Cache de dependências do sistema para acelerar builds
      - name: Cache system dependencies
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/package*.json') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install system dependencies for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gconf-service \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgcc1 \
            libgconf-2-4 \
            libgdk-pixbuf2.0-0 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            ca-certificates \
            fonts-liberation \
            libappindicator1 \
            libnss3 \
            lsb-release \
            xdg-utils \
            wget

      - name: Install npm dependencies
        run: npm ci

      # Cache de cookies para manter sessão entre execuções
      - name: Restore cookies cache
        uses: actions/cache@v3
        with:
          path: cookies.json
          key: linkedin-cookies-${{ github.run_id }}
          restore-keys: |
            linkedin-cookies-

      # Teste de configuração antes de executar
      - name: Test configuration
        env:
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          CI: true
        run: |
          echo "🔧 Validating configuration..."
          echo "LINKEDIN_EMAIL is set: $([[ -n "$LINKEDIN_EMAIL" ]] && echo "✅ yes" || echo "❌ no")"
          echo "LINKEDIN_PASSWORD is set: $([[ -n "$LINKEDIN_PASSWORD" ]] && echo "✅ yes" || echo "❌ no")"
          echo "TELEGRAM_BOT_TOKEN is set: $([[ -n "$TELEGRAM_BOT_TOKEN" ]] && echo "✅ yes" || echo "❌ no")"
          echo "TELEGRAM_CHAT_ID is set: $([[ -n "$TELEGRAM_CHAT_ID" ]] && echo "✅ yes" || echo "❌ no")"

          # Verificar se todas as variáveis estão definidas
          if [[ -z "$LINKEDIN_EMAIL" || -z "$LINKEDIN_PASSWORD" || -z "$TELEGRAM_BOT_TOKEN" || -z "$TELEGRAM_CHAT_ID" ]]; then
            echo "❌ Missing required environment variables"
            exit 1
          fi
          echo "✅ All environment variables are set"

      - name: Run scraper
        env:
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          CI: true
          NODE_ENV: production
        run: |
          echo "🚀 Starting LinkedIn scraper..."
          echo "📅 Execution time: $(date)"
          npm start
        continue-on-error: true # Continuar mesmo se falhar para capturar artifacts

      # Salvar cache de cookies após execução
      - name: Save cookies cache
        if: always()
        uses: actions/cache/save@v3
        with:
          path: cookies.json
          key: linkedin-cookies-${{ github.run_id }}

      # Upload de todos os arquivos de debug/screenshots
      - name: Upload debug artifacts
        uses: actions/upload-artifact@v4
        if: always() # Sempre fazer upload, mesmo se bem-sucedido
        with:
          name: debug-artifacts-${{ github.run_number }}
          path: |
            *.png
            *.json
            *.log
          retention-days: 7
          if-no-files-found: ignore

      # Log de resumo da execução
      - name: Execution summary
        if: always()
        run: |
          echo "📊 Execution Summary:"
          echo "   - Job status: ${{ job.status }}"
          echo "   - Timestamp: $(date)"
          echo "   - Artifacts uploaded: Check the Actions tab"

          if [[ -f "results.json" ]]; then
            POSTS_COUNT=$(jq length results.json 2>/dev/null || echo "unknown")
            echo "   - Total posts in database: $POSTS_COUNT"
          fi
