name: Debug LinkedIn Scraper

on:
  workflow_dispatch: # Execu√ß√£o manual apenas
    inputs:
      debug_level:
        description: 'Debug level'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - detailed
          - verbose

jobs:
  debug:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgcc1 \
            libgconf-2-4 \
            libgdk-pixbuf2.0-0 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            ca-certificates \
            fonts-liberation \
            libappindicator1 \
            libnss3 \
            lsb-release \
            xdg-utils \
            wget

      - name: Install npm dependencies
        run: npm ci

      - name: Debug environment
        env:
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "üîç Environment Debug Information:"
          echo "   - Node version: $(node --version)"
          echo "   - NPM version: $(npm --version)"
          echo "   - OS: $(uname -a)"
          echo "   - Chrome/Chromium: $(which google-chrome || echo 'not found')"
          echo "   - Debug level: ${{ github.event.inputs.debug_level }}"
          echo ""
          echo "üì¶ Package versions:"
          npm list puppeteer axios dotenv --depth=0
          echo ""
          echo "üîê Environment variables status:"
          echo "   - LINKEDIN_EMAIL: $([[ -n "$LINKEDIN_EMAIL" ]] && echo "SET (${#LINKEDIN_EMAIL} chars)" || echo "NOT SET")"
          echo "   - LINKEDIN_PASSWORD: $([[ -n "$LINKEDIN_PASSWORD" ]] && echo "SET (${#LINKEDIN_PASSWORD} chars)" || echo "NOT SET")"
          echo "   - TELEGRAM_BOT_TOKEN: $([[ -n "$TELEGRAM_BOT_TOKEN" ]] && echo "SET (${#TELEGRAM_BOT_TOKEN} chars)" || echo "NOT SET")"
          echo "   - TELEGRAM_CHAT_ID: $([[ -n "$TELEGRAM_CHAT_ID" ]] && echo "SET (${#TELEGRAM_CHAT_ID} chars)" || echo "NOT SET")"

      - name: Test Telegram connectivity
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "üìû Testing Telegram connectivity..."
          if [[ -n "$TELEGRAM_BOT_TOKEN" && -n "$TELEGRAM_CHAT_ID" ]]; then
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d "chat_id=${TELEGRAM_CHAT_ID}" \
              -d "text=üß™ Debug test from GitHub Actions at $(date)" \
              && echo "‚úÖ Telegram test message sent successfully" \
              || echo "‚ùå Failed to send Telegram test message"
          else
            echo "‚ùå Telegram credentials not available"
          fi

      - name: Test basic scraper functionality
        if: github.event.inputs.debug_level != 'basic'
        env:
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          CI: true
        run: |
          echo "üß™ Testing scraper with minimal execution..."
          timeout 180 npm start || echo "‚è∞ Scraper execution timed out (3 minutes)"

      - name: Upload all debug files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-files-${{ github.run_number }}
          path: |
            *.png
            *.json
            *.log
            package*.json
          retention-days: 3
